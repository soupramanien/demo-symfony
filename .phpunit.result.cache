{"version":1,"defects":{"App\\Tests\\Service\\UtilsTest::testPuissance with data set \"2 puissance 3\"":3,"App\\Tests\\Service\\UtilsTest::testPuissance with data set \"1000 puissance 0\"":3,"App\\Tests\\Service\\UtilsTest::testPuissance with data set \"0 puissance 0\"":3,"App\\Tests\\Service\\UtilsTest::testPuissance with data set \"1000 puissance 2\"":3,"App\\Tests\\Service\\UtilsTest::testPuissanceThrowsInvalidArgumentException":4,"App\\Tests\\Entity\\UserTest::testUserValidationPasses":4,"App\\Tests\\Entity\\UserTest::testUserValidationPasses with data set \"Fails when nom is blank\"":3,"App\\Tests\\Entity\\UserTest::testUserValidationPasses with data set \"Fails when password is missing\"":3,"App\\Tests\\Controller\\ProduitControllerTest::testSomething":3,"App\\Tests\\Controller\\ProduitControllerTest::testRouteListeProduits":3,"App\\Tests\\Controller\\ProduitControllerKernelTest::testFindByName_ProduitRepository":3,"App\\Tests\\Controller\\CityTest::testFindHighlyPopulatedCity":4,"App\\Tests\\Controller\\PersonneControllerTest::testRouteListePersonne_withUnauthenticatedUser_returns401":3,"App\\Tests\\Controller\\PersonneControllerTest::testRouteListePersonne_withUnauthorizedUser_returns403":3,"App\\Tests\\Controller\\PersonneControllerTest::testRouteListePersonne_withAuthorizedUser_returns200":3,"App\\Tests\\Service\\UtilsTest::testNominal":3,"App\\Tests\\Service\\UtilsTest::testGetFullname_withoutAccent":5,"App\\Tests\\Service\\UtilsTest::testGetFullname_withAccent":5,"App\\Tests\\Entity\\UserTest::testUserValidationPasses with data set \"Fails when pr\u00e9nom is blank\"":3,"App\\Tests\\Entity\\UserTest::testUserValidationPasses with data set \"Fails when email is not valid\"":3,"App\\Tests\\Entity\\UserTest::testUserValidationPasses with data set \"Fails when password contains less than 8 character\"":3,"App\\Tests\\Entity\\UserTest::testUserValidationPasses with data set \"Fails when password does not contain a special character\"":3,"App\\Tests\\Entity\\UserTest::testUserValidationPasses with data set \"Fails when password does not contain a uppercase character\"":3,"App\\Tests\\Entity\\UserTest::testUserValidationPasses with data set \"Fails when password does not contain a lowercase character\"":3,"App\\Tests\\Entity\\UserTest::testUserValidationPasses with data set \"Fails when password does not contain a digit\"":3,"App\\Tests\\Repository\\ProduitRepositoryKernelTest::testFindByAll_ProduitRepository":4,"App\\Tests\\Repository\\ProduitRepositoryKernelTest::testFindByName_ProduitRepository":4},"times":{"App\\Tests\\UtilsTest::testSomething":0.01,"App\\Tests\\Service\\UtilsTest::testSomething":0,"App\\Tests\\Service\\UtilsTest::testPuissance with data set \"2 puissance 3\"":0,"App\\Tests\\Service\\UtilsTest::testPuissance with data set \"1000 puissance 0\"":0,"App\\Tests\\Service\\UtilsTest::testPuissance with data set \"0 puissance 0\"":0,"App\\Tests\\Service\\UtilsTest::testPuissance with data set \"1000 puissance 2\"":0,"App\\Tests\\Service\\UtilsTest::testPuissanceThrowsInvalidArgumentException":0,"App\\Tests\\Entity\\UserTest::testUserValidationPasses":0.023,"App\\Tests\\Entity\\UserTest::testSomething":0.001,"App\\Tests\\Entity\\UserTest::testUserValidationPasses with data set \"Succeeds when data is correct\"":0.019,"App\\Tests\\Entity\\UserTest::testUserValidationPasses with data set \"Fails when nom is blank\"":0.001,"App\\Tests\\Entity\\UserTest::testUserValidationPasses with data set \"Fails when pr\u00e9nom is blank\"":0.001,"App\\Tests\\Entity\\UserTest::testUserValidationPasses with data set \"Fails when email is not valid\"":0.001,"App\\Tests\\Entity\\UserTest::testUserValidationPasses with data set \"Fails when password is missing\"":0.001,"App\\Tests\\Entity\\UserTest::testUserValidationPasses with data set \"Fails when password contains less than 8 character\"":0.001,"App\\Tests\\Entity\\UserTest::testUserValidationPasses with data set \"Fails when password does not contain a special character\"":0.001,"App\\Tests\\Entity\\UserTest::testUserValidationPasses with data set \"Fails when password does not contain a uppercase character\"":0.001,"App\\Tests\\Entity\\UserTest::testUserValidationPasses with data set \"Fails when password does not contain a lowercase character\"":0.001,"App\\Tests\\Entity\\UserTest::testUserValidationPasses with data set \"Fails when password does not contain a digit\"":0.001,"App\\Tests\\Controller\\ProduitControllerTest::testSomething":0.366,"App\\Tests\\Controller\\ProduitControllerTest::testRouteListeProduits":0.003,"App\\Tests\\Controller\\ProduitControllerKernelTest::testSomething":4.483,"App\\Tests\\Controller\\ProduitControllerKernelTest::testProduitRepository":0.067,"App\\Tests\\Controller\\ProduitControllerKernelTest::testFindByName_ProduitRepository":0.031,"App\\Tests\\Controller\\ProduitControllerTest::testRoutePageAccueil":0.013,"App\\Tests\\Controller\\ProduitControllerTest::testRouteAfficherProduit":0.002,"App\\Tests\\Controller\\CityTest::testSomething":0.155,"App\\Tests\\Controller\\CityTest::testFindHighlyPopulatedCity":0.086,"App\\Tests\\Controller\\CityControllerTest::testSomething":0.206,"App\\Tests\\Controller\\PersonneControllerTest::testRouteListePersonne_withUnauthenticatedUser_returns401":0.013,"App\\Tests\\Controller\\PersonneControllerTest::testRouteListePersonne_withUnauthorizedUser_returns403":0.09,"App\\Tests\\Controller\\PersonneControllerTest::testRouteListePersonne_withAuthorizedUser_returns200":0.025,"App\\Tests\\DemoTest::testSomething":0.002,"App\\Tests\\ProduitTest::testSomething":0.001,"App\\Tests\\Controller\\CityRepositoryKernelTest::testSomething":0,"App\\Tests\\Controller\\CityRepositoryKernelTest::testFindHighlyPopulatedCity":0.012,"App\\Tests\\Repository\\ProduitRepositoryKernelTest::testFindByAll_ProduitRepository":0.006,"App\\Tests\\Repository\\ProduitRepositoryKernelTest::testFindByName_ProduitRepository":0.003,"App\\Tests\\Service\\UtilsTest::testNominal":0,"App\\Tests\\Service\\UtilsTest::testGetFullname_withoutAccent":0,"App\\Tests\\Service\\UtilsTest::testGetFullname_withAccent":0,"App\\Tests\\Service\\UtilsTest::testGetFullname with data set \"test 1: without accent\"":0,"App\\Tests\\Service\\UtilsTest::testGetFullname with data set \"test 2: with accent\"":0,"App\\Tests\\Service\\UtilsTest::testGetFullname with data set \"test 3: with accents\"":0,"App\\Tests\\Service\\UtilsTest::testGetFullname with data set \"test 4: grec\"":0,"App\\Tests\\Repository\\CityRepositoryKernelTest::test_findHighlyPopulatedCity":0.123}}